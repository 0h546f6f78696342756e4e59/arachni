=begin
  $Id$

                  Arachni
  Copyright (c) 2010 Anastasios Laskos <tasos.laskos@gmail.com>

  This is free software; you can copy and distribute and modify
  this program under the term of the GPL v2.0 License
  (See LINCENSE file for details)

=end


#
# Vulnerability class.
# 
# It represents a detected vulnerability.
#
#
# @author: Zapotek <zapotek@segfault.gr> <br/>
# @version: $Rev: 126 $
#
module Arachni

class Vulnerability

    #
    # The vulnerable HTTP variable
    #
    attr_accessor :var
    
    #
    # The vulnerable URL 
    #
    attr_accessor :url
    
    #
    # The injected data that revealed the vulnerability
    #
    attr_accessor :injected
    
    #
    # The string that identified the vulnerability
    #
    attr_accessor :id
    
    #
    # The regexp that identified the vulnerability
    #
    attr_accessor :regexp
    
    #
    # The data that was matched by the regexp
    #
    attr_accessor :regexp_match
    
    #
    # The vulnerable element, link, form or cookie
    #
    attr_accessor :elem
    
    #
    # The description of the vulnerability
    #
    attr_accessor :description
    
    #
    # References related to the vulnerability
    #
    attr_accessor :references
    
    #
    # The CWE ID number of the vulnerability
    #
    attr_accessor :cwe
    
    #
    # High, Medium, Low
    #
    attr_accessor :severity
    
    #
    # The CVSS v2 score
    #
    attr_accessor :cvssv2
    
    #
    # A brief text telling the user how to remedy the situation
    #
    attr_accessor :remedy_guidance
    
    #
    # A code snipet showing the user how to remedy the situation
    #
    attr_accessor :remedy_code

    #
    # Sets up the instanse attributes
    #
    # @param    Hash    cofiguration hash
    #                     Usually the returned data of a module's
    #                     info() method for the references
    #                     merged with a name=>value pair hash holding
    #                     class attributes
    #
    def initialize( opts = {} )
        opts.each {
            |k, v|
            begin
                send( "#{k.downcase}=", v )
            rescue Exception => e
            end
        }
        
        @references = opts['References']

    end
    
    

end

end
