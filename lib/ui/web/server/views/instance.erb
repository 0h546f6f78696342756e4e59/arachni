
        <div id="page-intro">
            <h2 id="page_header">Attached to instance on port <%=params['port']%></h2>
            <p id="page_description">
                This page allows you to see what's going on at the other end of the wire (i.e. get status messages directly from the remote scanner).
                <br/>
                <br/>
            </p>

            <div id="control_buttons">
                <%if !shutdown %>

                <%if !paused %>
                    <form action="/instance/<%=params['port']%>/pause" method="post">
                        <%= csrf_tag %>
                        <input type="submit" value="Pause" />
                    </form>
                <%end%>

                <%if paused %>
                <form action="/instance/<%=params['port']%>/resume" method="post">
                    <%= csrf_tag %>
                    <input type="submit" value="Resume" />
                </form>
                <%end%>

                <form action="/instance/<%=params['port']%>/shutdown" method="post" target="_blank">
                    <%= csrf_tag %>
                    <input type="submit" value="Shutdown" />
                </form>

                <% end %>
            </div>
        </div>

        <%= erb :flash, {:layout => false} %>

        <div id="scan_data">
            <h3>Runtime statisics</h3>
            <div class="left">
                <ul>
                    <li>Pages audited: <span id="audited">0</span></li>
                    <li>Pages crawled: <span id="crawled">0</span></li>
                    <li>Progress: <span id="percentage">0</span>%</li>
                </ul>
            </div>
            <div>
                <ul>
                    <li>Current max concurrency: <span id="max_concurrency">0</span> requests</li>
                    <li>Average response time: <span id="average_res_time">0</span> ms</li>
                    <li>Current page: <span id="current_page">0</span></li>
                </ul>

            </div>

            <p><em>
                (Due to the fact that Arachni discovers pages using 2 complementary systems (the Spider and the Trainer)
                you may see some backwards progress or other weird progress behavior.)
            </em></p>
            <div id="progressbar"></div>

            <div class="left">
                <h3>Progress output:</h3>
                <div class="output" id="output"></div>
            </div>

            <div class="right">
                <h3>Results thus far:</h3>
                <div class="output" id="output_results"></div>
            </div>

            <div style="display: none" id="dialog-loading" title="Loading the scan report...">
                <p>
                    Please wait while the scan report is being loaded. <br/>
                    This process maybe take a while depending on the size of the report.
                </p>
                <p>
                    <em>
                        If the loading process takes an unusually long time the zombie reaper
                        may have beaten you to it.<br/>
                        Use the "Reports" tab to view the report.
                    </em>
                </p>
            </div>

            <div style="display: none" id="dialog-shutdown" title="The server has been shut down...">
                <p>
                    The report is waiting for you <a href="/reports">here</a>.
                </p>
            </div>

            <script type="text/javascript">
                //<![CDATA[

                function setProgressBar( progress ) {
                    $( "#progressbar" ).progressbar({
                        value: progress
                    });
                }

                function showReport( html ){
                    document.getElementById( 'control_buttons' ).innerHTML = ""
                    document.getElementById( 'page_header' ).innerHTML = "Report"
                    document.getElementById( 'page_description' ).innerHTML =
                        "The scan has completed succesfully, you can review the results using this report.<br/>" +
                        "This report has been saved and you can view or export it in various format via the Reports tab."

                    document.getElementById( 'scan_data' ).innerHTML = "<iframe class='report' src=" + html + "></iframe>"
                }

                function setStats( stats ){
                    if( stats == undefined ){ return }

                    document.getElementById( 'audited' ).innerHTML = stats.auditmap_size;
                    document.getElementById( 'crawled' ).innerHTML = stats.sitemap_size;
                    document.getElementById( 'current_page' ).innerHTML = stats.current_page;
                    document.getElementById( 'average_res_time' ).innerHTML = stats.average_res_time;
                    document.getElementById( 'max_concurrency' ).innerHTML = stats.max_concurrency;

                    percentage = (stats.auditmap_size / stats.sitemap_size) * 100
                    document.getElementById( 'percentage' ).innerHTML = parseInt( percentage );
                }

                function updateProgressBar(){
                    var stats_url = "/instance/<%= params['port'].to_i.to_s %>/stats.json";
                    $.getJSON( stats_url, function(data) {
                        if( data.stats == undefined ){ return }
                        setStats( data.stats );
                        percentage = (data.stats.auditmap_size / data.stats.sitemap_size) * 100
                        setProgressBar( percentage );
                    });
                }

                function updateOutput() {
                    if( !document.getElementById( 'output' ) ) return;

                    var output_url = "/instance/<%= params['port'].to_i.to_s %>/output.json";
                    $.getJSON( output_url, function(data) {

                        if( data.status == 'finished' ){
                            showShutdownDialog( );
                        } else {
                            if( data.report == undefined ) {
                                document.getElementById( 'output' ).innerHTML = data.data;
                            } else {
                                showReportLoadingDialog();
                                showReport( data.report );
                                $( "#dialog-loading" ).dialog('close')
                            }
                        }

                    });
                }

                function updateResults() {
                    if( !document.getElementById( 'output_results' ) ) return;

                    var output_results_url = "/instance/<%= params['port'].to_i.to_s %>/output_results.json";
                    $.getJSON( output_results_url, function(data) {
                        document.getElementById( 'output_results' ).innerHTML = data.data;
                    });
                }

                function showReportLoadingDialog( ) {
                    $( "#dialog-loading" ).dialog({
                        height: 200,
                        width: 720,
                        modal: true
                    });
                }

                function showShutdownDialog( ) {
                    $( "#dialog-shutdown" ).dialog({
                        height: 100,
                        modal: true
                    });
                }


                $( document ).ready(function() {

                    setProgressBar( 0 );

                    updateProgressBar();
                    setInterval( function() {
                        updateProgressBar();
                    }, 3000 );

                    updateOutput( );
                    setInterval( function() {
                          updateOutput( );
                    }, 1500 );


                    updateResults( )
                    setInterval( function() {
                          updateResults( );
                    }, 5000 );

                })

             //]]>
            </script>

        </div>
